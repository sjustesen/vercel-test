{
  "version": 3,
  "sources": ["../../../../src/cli/lib/envvars.ts"],
  "sourcesContent": ["/**\n * Help the developer store the CONVEX_URL environment variable.\n */\nimport chalk from \"chalk\";\nimport * as dotenv from \"dotenv\";\n\nimport { Context, logWarning } from \"../../bundler/context.js\";\nimport { loadPackageJson } from \"./utils.js\";\n\nconst FRAMEWORKS = [\n  \"create-react-app\",\n  \"Next.js\",\n  \"Vite\",\n  \"Remix\",\n  \"SvelteKit\",\n] as const;\ntype Framework = (typeof FRAMEWORKS)[number];\n\ntype ConvexUrlWriteConfig = {\n  envFile: string;\n  envVar: string;\n  oldValue?: string;\n} | null;\n\nexport async function writeConvexUrlToEnvFile(\n  ctx: Context,\n  value: string\n): Promise<ConvexUrlWriteConfig> {\n  const writeConfig = await envVarWriteConfig(ctx, value);\n\n  if (writeConfig === null) {\n    return null;\n  }\n\n  const { envFile, envVar, oldValue } = writeConfig;\n\n  if (oldValue !== undefined) {\n    const modified = ctx.fs.readUtf8File(envFile).replace(oldValue, value);\n    ctx.fs.writeUtf8File(envFile, modified);\n  } else {\n    const doesFileExist = ctx.fs.exists(envFile);\n    if (doesFileExist) {\n      const orig = ctx.fs.readUtf8File(envFile);\n      const modified = `${orig}\\n${envVar}=\"${value}\"\\n`;\n      ctx.fs.writeUtf8File(envFile, modified);\n    } else {\n      const contents = `${envVar}=\"${value}\"\\n`;\n      ctx.fs.writeUtf8File(envFile, contents);\n    }\n  }\n  return writeConfig;\n}\n\nexport async function suggestedEnvVarName(ctx: Context): Promise<{\n  detectedFramework?: Framework;\n  envVar: string;\n}> {\n  // no package.json, that's fine, just guess\n  if (!ctx.fs.exists(\"package.json\")) {\n    return {\n      envVar: \"CONVEX_URL\",\n    };\n  }\n\n  const packages = await loadPackageJson(ctx);\n\n  // Is it create-react-app?\n  const isCreateReactApp = \"react-scripts\" in packages;\n  if (isCreateReactApp) {\n    return {\n      detectedFramework: \"create-react-app\",\n      envVar: \"REACT_APP_CONVEX_URL\",\n    };\n  }\n\n  const isNextJs = \"next\" in packages;\n  if (isNextJs) {\n    return {\n      detectedFramework: \"Next.js\",\n      envVar: \"NEXT_PUBLIC_CONVEX_URL\",\n    };\n  }\n\n  const isRemix = \"@remix-run/dev\" in packages;\n  if (isRemix) {\n    return {\n      detectedFramework: \"Remix\",\n      envVar: \"CONVEX_URL\",\n    };\n  }\n\n  const isSvelteKit = \"@sveltejs/kit\" in packages;\n  if (isSvelteKit) {\n    return {\n      detectedFramework: \"SvelteKit\",\n      envVar: \"PUBLIC_CONVEX_URL\",\n    };\n  }\n\n  // Vite is a dependency of a lot of things; vite appearing in dependencies is not a strong indicator.\n  const isVite = \"vite\" in packages;\n\n  if (isVite) {\n    return {\n      detectedFramework: \"Vite\",\n      envVar: \"VITE_CONVEX_URL\",\n    };\n  }\n\n  return {\n    envVar: \"CONVEX_URL\",\n  };\n}\n\nasync function envVarWriteConfig(\n  ctx: Context,\n  value: string | null\n): Promise<ConvexUrlWriteConfig> {\n  const { detectedFramework, envVar } = await suggestedEnvVarName(ctx);\n\n  const { envFile, existing } = suggestedDevEnvFile(ctx, detectedFramework);\n\n  if (existing) {\n    const config = dotenv.parse(ctx.fs.readUtf8File(envFile));\n\n    const matching = Object.keys(config).filter((key) =>\n      EXPECTED_NAMES.has(key)\n    );\n    if (matching.length > 1) {\n      logWarning(\n        ctx,\n        chalk.yellow(\n          `Found multiple CONVEX_URL environment variables in ${envFile} so cannot update automatically.`\n        )\n      );\n      return null;\n    }\n    if (matching.length === 1) {\n      const [envVar, oldValue] = [matching[0], config[matching[0]]];\n      if (oldValue === value) {\n        return null;\n      }\n      if (Object.values(config).filter((v) => v === oldValue).length !== 1) {\n        chalk.yellow(`Can't safely modify ${envFile}, please edit manually.`);\n        return null;\n      }\n      return { envFile, envVar, oldValue };\n    }\n  }\n\n  return { envFile, envVar };\n}\n\nfunction suggestedDevEnvFile(\n  ctx: Context,\n  framework?: Framework\n): {\n  existing: boolean;\n  envFile: string;\n} {\n  // If a .env.local file exists, that's unequivocally the right file\n  if (ctx.fs.exists(\".env.local\")) {\n    return {\n      existing: true,\n      envFile: \".env.local\",\n    };\n  }\n\n  // Remix is on team \"don't commit the .env file,\" so .env is for dev.\n  if (framework === \"Remix\") {\n    return {\n      existing: ctx.fs.exists(\".env\"),\n      envFile: \".env\",\n    };\n  }\n\n  // The most dev-looking env file that exists, or .env.local\n  return {\n    existing: ctx.fs.exists(\".env.local\"),\n    envFile: \".env.local\",\n  };\n}\n\nconst EXPECTED_NAMES = new Set([\n  \"CONVEX_URL\",\n  \"PUBLIC_CONVEX_URL\",\n  \"NEXT_PUBLIC_CONVEX_URL\",\n  \"VITE_CONVEX_URL\",\n  \"REACT_APP_CONVEX_URL\",\n]);\n\nexport function buildEnvironment(): string | boolean {\n  return process.env.VERCEL\n    ? \"Vercel\"\n    : process.env.NETLIFY\n    ? \"Netlify\"\n    : false;\n}\n\nexport function gitBranchFromEnvironment(): string | null {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/projects/environment-variables/system-environment-variables\n    return process.env.VERCEL_GIT_COMMIT_REF ?? null;\n  }\n  if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/\n    return process.env.HEAD ?? null;\n  }\n\n  if (process.env.CI) {\n    // https://docs.github.com/en/actions/learn-github-actions/variables\n    // https://docs.gitlab.com/ee/ci/variables/predefined_variables.html\n    return (\n      process.env.GITHUB_HEAD_REF ?? process.env.CI_COMMIT_REF_NAME ?? null\n    );\n  }\n\n  return null;\n}\n\nexport function isNonProdBuildEnvironment(): boolean {\n  if (process.env.VERCEL) {\n    // https://vercel.com/docs/projects/environment-variables/system-environment-variables\n    return process.env.VERCEL_ENV !== \"production\";\n  }\n  if (process.env.NETLIFY) {\n    // https://docs.netlify.com/configure-builds/environment-variables/\n    return process.env.CONTEXT !== \"production\";\n  }\n  return false;\n}\n"],
  "mappings": "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",
  "names": ["chalk", "envVar"]
}
